
@model BikeShop.ViewModels.ServiceFormViewModel

@{
    ViewBag.Title = "ServiceForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Option Service</h2>

<br />

@using (Html.BeginForm("Save", "Services", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "Please correct the following errors:", new { @class = "text-danger" });
    
    <div class="form-group">
        @Html.LabelFor(p => p.Service.ServiceName)
        @Html.TextBoxFor(p => p.Service.ServiceName, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Service.ServiceName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Service.ServiceDetail)
        @Html.TextBoxFor(p => p.Service.ServiceDetail, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Service.ServiceDetail, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Service.ServiceTypeID)
        @Html.DropDownListFor(p => p.Service.ServiceTypeID,
                 new SelectList(Model.ServiceTypes, "ServiceTypeID", "ServiceTypeName"),
                 "Select Service Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Service.ServiceTypeID, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Service.Image)
        @Html.TextBoxFor(p => p.Service.File, new { @class = "form-control", type = "file" })
        @Html.ValidationMessageFor(p => p.Service.File, "", new { @class = "text-danger" })
    </div>

    <br />

    @Html.HiddenFor(p => p.Service.ServiceID)
    @Html.AntiForgeryToken()

    <button type="submit" class="btn btn-primary">Save</button>

}
@*@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");

}*@
